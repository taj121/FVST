%%%%%% -- vk.sty
%%%%%% Usefull general macros
%%%%%% Last modified: Oct 14, 2015 - 20:23:15

% \RequirePackage[usenames,dvipsnames]{color} % this is for the \todo macro
\RequirePackage{alltt}
\RequirePackage{xspace}
\RequirePackage{mathpartir}
\RequirePackage{xargs}
\RequirePackage[section]{placeins} % keeps floats in the section they are defined

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Mathematics Environment %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% better ensuremath (from mmm.sty)
\newcommand{\ma}[1]{\ensuremath{#1}\xspace}

% (inductive) proof cases
\newcommand{\icase}[1]{\text{\textbf{Case~}{#1}\textbf{:}}}
%{{\flushleft\textbf{Case}~#1:}}

% modulo with nicer spacing
\def\imod#1{\allowbreak\mkern10mu({\operator@font mod}\,\,#1)}

% text operators
\def\tiff{\ma{\mathrel{\text{iff}}}}
\def\tand{\ma{\mathrel{\text{and}}}}
\def\timplies{\ma{\mathrel{\mathit{implies}}}}

% definition equal
\newcommand{\defeq}{\ma{\mathrel{\stackrel{%
\mathrm{\text{\tiny def}}}{=}}}}


%%%%%%%%%%%%%%%
%%% Spacing %%%
%%%%%%%%%%%%%%%

% basic space length unit = 1 math unit = 0.0555em
\newlength{\basicspacelen}
\newlength{\basictablength}
\setlength{\basicspacelen}{0.0555em}
\setlength{\basictablength}{1em}

% variable width space
\newcommand{\vsp}[1][1]{\hspace*{#1\basicspacelen}}
% larger space
\newcommand{\vtab}[1][1]{\hspace*{#1\basictablength}}
% operator space (from mmm.sty)
%\newcommand{\opsp}[1][1]{\mathop{}{}}
\newcommand{\opsp}[1][1]{\vsp[#1]}

%%%%%%%%%%%%%
%%% Boxes %%%
%%%%%%%%%%%%%
% group boxz
\newcommand{\nbox}[2][t]{\ensuremath{\nboxstart{#1}#2\nboxstop}}
\newcommand{\nboxstart}[1]{\begin{array}[#1]{@{}l@{}}}
\newcommand{\nboxstop}{\end{array}}
\newcommand{\nsplit}[1][1]{\\ \vtab[#1]}
% align boxz
\newcommand{\abox}[2][t]{\ensuremath{\aboxstart{#1}#2\aboxstop}}
\newcommand{\aboxstart}[1]{\begin{array}[#1]{@{}r@{~}l@{}}}
\newcommand{\aboxstop}{\end{array}}
\newcommand{\asplit}[1][1]{\\ \vtab[#1]}
% new align boxz
\newcommandx{\Abox}[9][1=t,2=~,3=l,4=l,5=l,6=l,7=l,8=l]
  {\ma{\Aboxstart{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}{l}#9\Aboxstop}}
\newcommand{\Aboxstart}[9]
  {\begin{array}[#1]{@{}#3@{#2}#4@{#2}#5@{#2}#6@{#2}#7@{#2}#8@{#2}#9@{}}}
\newcommand{\Aboxstop}{\end{array}}
\newcommand{\Asplit}[1][1]{\\\vtab[#1]}
% new align boxz
\newcommandx{\Cbox}[9][1=t,2=~,3=c,4=c,5=c,6=c,7=c,8=c]
  {\ma{\Aboxstart{#1}{#2}{#3}{#4}{#5}{#6}{#7}{#8}{l}#9\Aboxstop}}
% align both columns to the center
\newcommand{\ccbox}[1]{\ensuremath{\ccboxstart#1\ccboxstop}}
\newcommand{\ccboxstart}{\begin{array}[t]{@{}c@{\quad}c@{}}}
\newcommand{\ccboxstop}{\end{array}}
\newcommand{\ccsplit}[1]{\\}
% align both columns to the left
\newcommand{\lbox}[1]{\ensuremath{\lboxstart#1\lboxstop}}
\newcommand{\lboxstart}{\begin{array}[t]{@{}l@{\vsp}l@{}}}
\newcommand{\lboxstop}{\end{array}}
% centered box
\newcommand{\cbox}[2][t]{\ensuremath{\cboxstart{#1}#2\cboxstop}}
\newcommand{\cboxstart}[1]{\begin{array}[#1]{@{}c@{}}}
\newcommand{\cboxstop}{\end{array}}
\newcommand{\csplit}[1][1]{\\ \vtab[#1]}
% 3 collumn box
\newcommand{\threebox}[1]{\ensuremath{\threeboxstart#1\threeboxstop}}
\newcommand{\threeboxstart}{\begin{array}[t]{@{}r@{~}l@{~}l@{}}}
\newcommand{\threeboxstop}{\end{array}}
% new box, vertically alligned at the bottom
\newcommand{\bbox}[1]{\ensuremath{\bboxstart#1\bboxstop}}
\newcommand{\bboxstart}{\begin{array}[b]{@{}c@{}}}
\newcommand{\bboxstop}{\end{array}}
\newcommand{\bsplit}[1]{\\}



%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Mathematical Sets %%%
%%%%%%%%%%%%%%%%%%%%%%%%%

%%% Symbols for the sets of the natural, real, rational,
%%% and complex numbers

\def\N{{I\mkern-4.7mu N}}
\def\R{{\textrm{I\mkern-3mu R}}}
\def\Q{{\@QC Q}}
\def\C{{\@QC C}}
\def\@QC#1{\mathpalette{\setbox0=\hbox\bgroup$\rm}%
  {\egroup C$\egroup\rm\rlap{\kern0.4\wd0\vrule
  width 0.05\wd0 height 0.97\ht0 depth -0.01\ht0}%
  #1\bgroup}}

%%%%%%%%%%%%%%
%%% Floats %%%
%%%%%%%%%%%%%%
% Turn off the stupid acmconf rule above the caption
%\@setflag \@caprule = \@false

\def\dstart{\hbox to \hsize{\vrule depth 0pt\hrulefill\vrule depth 0pt}}
\def\dend{\hbox to \hsize{\phantom{\vrule height 5pt}\hrulefill\vrule height 0pt}}


%\newlength{\myfigure@old@abovedisplayskip}
%\newlength{\myfigure@old@belowdisplayskip}
\newenvironment{myfigure*}[2]
{\begin{figure*}[t]
 \def\figtitle{#1}
 \def\figlabel{#2}
% \setlength{\myfigure@old@abovedisplayskip}{\abovedisplayskip}
% \setlength{\myfigure@old@belowdisplayskip}{\belowdisplayskip}
% \setlength{\abovedisplayskip}{0pt}
% \setlength{\belowdisplayskip}{0pt}
 %\hrule
 %\fontsize{8.5}{9}\selectfont%
 %\footnotesize\selectfont
 }{%\hrule
 \caption{\figtitle\label{\figlabel}}
% \setlength{\abovedisplayskip}{\myfigure@old@abovedisplayskip}
% \setlength{\belowdisplayskip}{\myfigure@old@belowdisplayskip}
\end{figure*}}

\newenvironment{myfigure}[2]
{\begin{figure}[t]
 \def\figtitle{#1}%
 \def\figlabel{#2}%
 \hrule\vspace{-2ex}
}{
 \vspace{-2ex}\hrule
 \caption{\figtitle\label{\figlabel}}%
 \end{figure}%
}
\newenvironment{myfigureopt}[3]
{\begin{figure}[#1]
 \def\figtitle{#2}%
 \def\figlabel{#3}%
 \hrule
 \footnotesize\selectfont
}{
 \hrule
 \caption{\figtitle\label{\figlabel}}%
 \end{figure}%
}



% Left-justified, boxed titles in floats:
\newlength{\@fltitlelen}
\newlength{\@fltitlelentmp}
\newcommand{\floattitle}[1]
  {\settowidth{\@fltitlelentmp}{~}%
   \setlength{\@fltitlelen}{\textwidth}%
   \addtolength{\@fltitlelen}{-\@fltitlelentmp}%
   ~\makebox[\@fltitlelen][l]{\fbox{~{#1}~}}}
\newcommand{\floattitleb}[1]
  {~\fbox{~{#1}~}}


%%% Conditional to test for empty arguments.
%%% It doesn't work in some weird cases when \iftrue or \iffalse is used, but
%%% I find this macro more standard; see source.
%%% source: http://www.ctan.org/pub/tex-archive/info/aro-bend/answer.002

%    \@car is actually already defined in latex.tex, but for
%    maximum robustness it needs to have the \long prefix:
\long\def\@car#1#2\@nil{#1}
\long\def\@first#1#2{#1}
\long\def\@second#1#2{#2}
\long\def\ifempty#1{\expandafter\ifx\@car#1@\@nil @\@empty
  \expandafter\@first\else\expandafter\@second\fi}



%%%%%%%%%%%%%%%%%%%%%%%
%%% Inference rules %%%
%%%%%%%%%%%%%%%%%%%%%%%

% inference rule
% usage: \irule[name][irefname]{premises}{conclusion}
% usage: \irule*[name][irefname]{premises}{conclusion}

\newcommand{\irule}{\@ifnextchar*\irule@top\irule@second}
\newcommand{\irule@second}{\@ifnextchar!\irule@singleline\irule@side}

\def\irule@top*{\irule@top@prime}
\newcommandx{\irule@top@prime}[5][1=,2=,5=]{
  \ma{\inferrule[{\footnotesize #1}]{#3}{#4} #5}%
  \ifempty{#2}{}%
   {\expandafter\gdef\csname ir@#2\endcsname{\ma{\RefTirName{#1}}}}%
}
\def\irule@side{\irule@side@prime}
\newcommandx{\irule@side@prime}[5][1=,2=,5=]{
  \mprset{center}\ma{\RefTirName{#1}\;\inferrule{#3}{#4} #5 }%
  \ifempty{#2}{}%
   {\expandafter\gdef\csname ir@#2\endcsname{\ma{\RefTirName{#1}}}}%
}
\def\irule@singleline!{\irule@singleline@prime}
\newcommandx{\irule@singleline@prime}[4][1=,2=]{
  \ma{\ifempty{#1}{}{\RefTirName{#1}} & #4 & \ifempty{#3}{&}{\text{if} & #3}}%
  \ifempty{#2}{}%
   {\expandafter\gdef\csname ir@#2\endcsname{\ma{\RefTirName{#1}}}}%
}

% Reference name of inference rules
\newcommand{\iref}[1]{\ma{%
%  \def\tmp@name{\@irefname{#1}}%
  \ifundef{ir@#1}%
    \@questionmark%
  \else%
    \csname ir@#1\endcsname%
  \fi%
}}
\newcommand{\@questionmark}{\textbf{?}\message{Warning: there were undefined references to rules!}}
%\newcommand{\@irefname}[1]{\csname ir@#1\endcsname}

%%%%%%%%%%%%%%%%%%%%
%%% Conditionals %%%
%%%%%%%%%%%%%%%%%%%%

% if undefined macro. Usage: \ifundef{A} ... \else ... \fi
\def\ifundef#1{\expandafter\ifx\csname#1\endcsname\relax}

%%% Conditional to test for empty arguments.
%%% It doesn't work in some weird cases when \iftrue or \iffalse is used, but
%%% I find this macro more standard; see source.
%%% source: http://www.ctan.org/pub/tex-archive/info/aro-bend/answer.002

%    \@car is actually already defined in latex.tex, but for
%    maximum robustness it needs to have the \long prefix:
\long\def\@car#1#2\@nil{#1}
\long\def\@first#1#2{#1}
\long\def\@second#1#2{#2}
\long\def\ifempty#1{\expandafter\ifx\@car#1@\@nil @\@empty
  \expandafter\@first\else\expandafter\@second\fi}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% 'Work in progress' macros %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% draft heading
\def\Draft{\RequirePackage{fancyhdr}\chead{Draft, %
\today}}

% to do macros
%\def\pretodo#1{\typeout{*** TODO: #1}}
%\def\todo#1{\pretodo{#1}\text{{{\color{red}\bfseries TODO:} #1}}}
\newcommand{\todo}[1][]{{\color{red}\bfseries TODO:} #1}

%%% Symbol for the set of integer numbers

%You can try to make a symbol for the integer numbers from
%two Z's as above, but that won't look very nice. Instead
%you can make your own symbol using Metafont

%\DeclareFontFamily{U}{cmmz}{}
%\DeclareFontShape{U}{cmmz}{m}{n}{<-8><8><9><10>%
%  <10.95><12><14.4><17.28><20.74><24.88>cmmz10}{}
%\DeclareSymbolFont{mz}{U}{cmmz}{m}{n}
%\DeclareMathSymbol\Z{\mathord}{mz}{"5A}

% bold math font!
%\def\bmath#1{\mbox{\boldmath$#1$}}
\def\bmath#1{\mathchoice{\mbox{\boldmath$\displaystyle#1$}}
{\mbox{\boldmath$\textstyle#1$}}
{\mbox{\boldmath$\scriptstyle#1$}}
{\mbox{\boldmath$\scriptscriptstyle#1$}}}

\newcommand{\freshfrom}{\ma{\mathrel{\sharp}}}

\newcommand{\VK}[1]{{\color{blue}#1}}
